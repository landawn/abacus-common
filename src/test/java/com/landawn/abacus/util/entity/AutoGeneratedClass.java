package com.landawn.abacus.util.entity;

import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.List;
import java.util.Map;

import com.landawn.abacus.util.N;
import com.landawn.abacus.util.Range;
import com.landawn.abacus.util.u.Optional;
import com.landawn.abacus.util.stream.Stream;

public class AutoGeneratedClass {

    private Date field3;
    private List<Calendar> field4;
    private Date field5;
    private Optional<Timestamp> field6;
    private Range<Time> field7;
    private Time field8;
    private Map<List<Stream<String>>, String> field9;
    private List<Map<String, List<Map<Float, Double>>>> field10;

    public AutoGeneratedClass() {
    }

    public AutoGeneratedClass(Date field3, List<Calendar> field4, Date field5, Optional<Timestamp> field6, Range<Time> field7, Time field8,
            Map<List<Stream<String>>, String> field9, List<Map<String, List<Map<Float, Double>>>> field10) {
        this.field3 = field3;
        this.field4 = field4;
        this.field5 = field5;
        this.field6 = field6;
        this.field7 = field7;
        this.field8 = field8;
        this.field9 = field9;
        this.field10 = field10;
    }

    public Date getField3() {
        return field3;
    }

    public AutoGeneratedClass setField3(Date field3) {
        this.field3 = field3;

        return this;
    }

    public List<Calendar> getField4() {
        return field4;
    }

    public AutoGeneratedClass setField4(List<Calendar> field4) {
        this.field4 = field4;

        return this;
    }

    public Date getField5() {
        return field5;
    }

    public AutoGeneratedClass setField5(Date field5) {
        this.field5 = field5;

        return this;
    }

    public Optional<Timestamp> getField6() {
        return field6;
    }

    public AutoGeneratedClass setField6(Optional<Timestamp> field6) {
        this.field6 = field6;

        return this;
    }

    public Range<Time> getField7() {
        return field7;
    }

    public AutoGeneratedClass setField7(Range<Time> field7) {
        this.field7 = field7;

        return this;
    }

    public Time getField8() {
        return field8;
    }

    public AutoGeneratedClass setField8(Time field8) {
        this.field8 = field8;

        return this;
    }

    public Map<List<Stream<String>>, String> getField9() {
        return field9;
    }

    public AutoGeneratedClass setField9(Map<List<Stream<String>>, String> field9) {
        this.field9 = field9;

        return this;
    }

    public List<Map<String, List<Map<Float, Double>>>> getField10() {
        return field10;
    }

    public AutoGeneratedClass setField10(List<Map<String, List<Map<Float, Double>>>> field10) {
        this.field10 = field10;

        return this;
    }

    public AutoGeneratedClass copy() {
        final AutoGeneratedClass copy = new AutoGeneratedClass();

        copy.field3 = this.field3;
        copy.field4 = this.field4;
        copy.field5 = this.field5;
        copy.field6 = this.field6;
        copy.field7 = this.field7;
        copy.field8 = this.field8;
        copy.field9 = this.field9;
        copy.field10 = this.field10;

        return copy;
    }

    @Override
    public int hashCode() {
        int h = 17;
        h = 31 * h + N.hashCode(field3);
        h = 31 * h + N.hashCode(field4);
        h = 31 * h + N.hashCode(field5);
        h = 31 * h + N.hashCode(field6);
        h = 31 * h + N.hashCode(field7);
        h = 31 * h + N.hashCode(field8);
        h = 31 * h + N.hashCode(field9);
        return 31 * h + N.hashCode(field10);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (obj instanceof AutoGeneratedClass other) {
            return N.equals(field3, other.field3) && N.equals(field4, other.field4) && N.equals(field5, other.field5) && N.equals(field6, other.field6)
                    && N.equals(field7, other.field7) && N.equals(field8, other.field8) && N.equals(field9, other.field9) && N.equals(field10, other.field10);
        }

        return false;
    }

    @Override
    public String toString() {
        return "{field3=" + N.toString(field3) + ", field4=" + N.toString(field4) + ", field5=" + N.toString(field5) + ", field6=" + N.toString(field6)
                + ", field7=" + N.toString(field7) + ", field8=" + N.toString(field8) + ", field9=" + N.toString(field9) + ", field10=" + N.toString(field10)
                + "}";
    }
}
