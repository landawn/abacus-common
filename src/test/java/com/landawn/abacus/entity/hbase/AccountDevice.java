/*
 * Generated by Abacus.
 */
package com.landawn.abacus.entity.hbase;

import java.sql.Timestamp;
import java.util.Objects;

import com.landawn.abacus.annotation.Type;
import com.landawn.abacus.util.HBaseColumn;

public class AccountDevice implements HbasePNL.AccountDevicePNL {
    private HBaseColumn<Long> id;
    private HBaseColumn<Long> accountId;
    private HBaseColumn<String> name;
    private HBaseColumn<String> udid;
    private HBaseColumn<String> platform;
    private HBaseColumn<String> model;
    private HBaseColumn<String> manufacturer;
    private HBaseColumn<Timestamp> produceTime;
    private HBaseColumn<String> category;
    private HBaseColumn<String> description;
    private HBaseColumn<Integer> status;
    private HBaseColumn<Timestamp> lastUpdateTime;
    private HBaseColumn<Timestamp> createdTime;

    public AccountDevice() {
    }

    public AccountDevice(HBaseColumn<Long> id) {
        this();

        setId(id);
    }

    public AccountDevice(HBaseColumn<Long> accountId, HBaseColumn<String> name, HBaseColumn<String> udid, HBaseColumn<String> platform,
            HBaseColumn<String> model, HBaseColumn<String> manufacturer, HBaseColumn<Timestamp> produceTime, HBaseColumn<String> category,
            HBaseColumn<String> description, HBaseColumn<Integer> status, HBaseColumn<Timestamp> lastUpdateTime, HBaseColumn<Timestamp> createdTime) {
        this();

        setAccountId(accountId);
        setName(name);
        setUDID(udid);
        setPlatform(platform);
        setModel(model);
        setManufacturer(manufacturer);
        setProduceTime(produceTime);
        setCategory(category);
        setDescription(description);
        setStatus(status);
        setLastUpdateTime(lastUpdateTime);
        setCreatedTime(createdTime);
    }

    public AccountDevice(HBaseColumn<Long> id, HBaseColumn<Long> accountId, HBaseColumn<String> name, HBaseColumn<String> udid, HBaseColumn<String> platform,
            HBaseColumn<String> model, HBaseColumn<String> manufacturer, HBaseColumn<Timestamp> produceTime, HBaseColumn<String> category,
            HBaseColumn<String> description, HBaseColumn<Integer> status, HBaseColumn<Timestamp> lastUpdateTime, HBaseColumn<Timestamp> createdTime) {
        this();

        setId(id);
        setAccountId(accountId);
        setName(name);
        setUDID(udid);
        setPlatform(platform);
        setModel(model);
        setManufacturer(manufacturer);
        setProduceTime(produceTime);
        setCategory(category);
        setDescription(description);
        setStatus(status);
        setLastUpdateTime(lastUpdateTime);
        setCreatedTime(createdTime);
    }

    @Type("HBaseColumn<Long>")
    public HBaseColumn<Long> getId() {
        return id;
    }

    public AccountDevice setId(HBaseColumn<Long> id) {
        this.id = id;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<Long> id() {
        return (HBaseColumn<Long>) (this.id == null ? HBaseColumn.emptyOf(long.class) : id);
    }

    public AccountDevice setId(long value) {
        setId(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setId(long value, long version) {
        setId(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<Long>")
    public HBaseColumn<Long> getAccountId() {
        return accountId;
    }

    public AccountDevice setAccountId(HBaseColumn<Long> accountId) {
        this.accountId = accountId;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<Long> accountId() {
        return (HBaseColumn<Long>) (this.accountId == null ? HBaseColumn.emptyOf(long.class) : accountId);
    }

    public AccountDevice setAccountId(long value) {
        setAccountId(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setAccountId(long value, long version) {
        setAccountId(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getName() {
        return name;
    }

    public AccountDevice setName(HBaseColumn<String> name) {
        this.name = name;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> name() {
        return (HBaseColumn<String>) (this.name == null ? HBaseColumn.emptyOf(String.class) : name);
    }

    public AccountDevice setName(String value) {
        setName(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setName(String value, long version) {
        setName(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getUDID() {
        return udid;
    }

    public AccountDevice setUDID(HBaseColumn<String> udid) {
        this.udid = udid;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> udid() {
        return (HBaseColumn<String>) (this.udid == null ? HBaseColumn.emptyOf(String.class) : udid);
    }

    public AccountDevice setUDID(String value) {
        setUDID(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setUDID(String value, long version) {
        setUDID(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getPlatform() {
        return platform;
    }

    public AccountDevice setPlatform(HBaseColumn<String> platform) {
        this.platform = platform;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> platform() {
        return (HBaseColumn<String>) (this.platform == null ? HBaseColumn.emptyOf(String.class) : platform);
    }

    public AccountDevice setPlatform(String value) {
        setPlatform(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setPlatform(String value, long version) {
        setPlatform(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getModel() {
        return model;
    }

    public AccountDevice setModel(HBaseColumn<String> model) {
        this.model = model;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> model() {
        return (HBaseColumn<String>) (this.model == null ? HBaseColumn.emptyOf(String.class) : model);
    }

    public AccountDevice setModel(String value) {
        setModel(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setModel(String value, long version) {
        setModel(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getManufacturer() {
        return manufacturer;
    }

    public AccountDevice setManufacturer(HBaseColumn<String> manufacturer) {
        this.manufacturer = manufacturer;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> manufacturer() {
        return (HBaseColumn<String>) (this.manufacturer == null ? HBaseColumn.emptyOf(String.class) : manufacturer);
    }

    public AccountDevice setManufacturer(String value) {
        setManufacturer(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setManufacturer(String value, long version) {
        setManufacturer(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<Timestamp>")
    public HBaseColumn<Timestamp> getProduceTime() {
        return produceTime;
    }

    public AccountDevice setProduceTime(HBaseColumn<Timestamp> produceTime) {
        this.produceTime = produceTime;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<Timestamp> produceTime() {
        return (HBaseColumn<Timestamp>) (this.produceTime == null ? HBaseColumn.emptyOf(Timestamp.class) : produceTime);
    }

    public AccountDevice setProduceTime(Timestamp value) {
        setProduceTime(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setProduceTime(Timestamp value, long version) {
        setProduceTime(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getCategory() {
        return category;
    }

    public AccountDevice setCategory(HBaseColumn<String> category) {
        this.category = category;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> category() {
        return (HBaseColumn<String>) (this.category == null ? HBaseColumn.emptyOf(String.class) : category);
    }

    public AccountDevice setCategory(String value) {
        setCategory(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setCategory(String value, long version) {
        setCategory(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<String>")
    public HBaseColumn<String> getDescription() {
        return description;
    }

    public AccountDevice setDescription(HBaseColumn<String> description) {
        this.description = description;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<String> description() {
        return (HBaseColumn<String>) (this.description == null ? HBaseColumn.emptyOf(String.class) : description);
    }

    public AccountDevice setDescription(String value) {
        setDescription(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setDescription(String value, long version) {
        setDescription(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<Integer>")
    public HBaseColumn<Integer> getStatus() {
        return status;
    }

    public AccountDevice setStatus(HBaseColumn<Integer> status) {
        this.status = status;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<Integer> status() {
        return (HBaseColumn<Integer>) (this.status == null ? HBaseColumn.emptyOf(int.class) : status);
    }

    public AccountDevice setStatus(int value) {
        setStatus(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setStatus(int value, long version) {
        setStatus(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<Timestamp>")
    public HBaseColumn<Timestamp> getLastUpdateTime() {
        return lastUpdateTime;
    }

    public AccountDevice setLastUpdateTime(HBaseColumn<Timestamp> lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<Timestamp> lastUpdateTime() {
        return (HBaseColumn<Timestamp>) (this.lastUpdateTime == null ? HBaseColumn.emptyOf(Timestamp.class) : lastUpdateTime);
    }

    public AccountDevice setLastUpdateTime(Timestamp value) {
        setLastUpdateTime(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setLastUpdateTime(Timestamp value, long version) {
        setLastUpdateTime(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Type("HBaseColumn<Timestamp>")
    public HBaseColumn<Timestamp> getCreatedTime() {
        return createdTime;
    }

    public AccountDevice setCreatedTime(HBaseColumn<Timestamp> createdTime) {
        this.createdTime = createdTime;

        return this;
    }

    /**
     * Returns the (first) column or an empty column if it's null.
     *
     * @return 
     */
    public HBaseColumn<Timestamp> createdTime() {
        return (HBaseColumn<Timestamp>) (this.createdTime == null ? HBaseColumn.emptyOf(Timestamp.class) : createdTime);
    }

    public AccountDevice setCreatedTime(Timestamp value) {
        setCreatedTime(HBaseColumn.valueOf(value));

        return this;
    }

    public AccountDevice setCreatedTime(Timestamp value, long version) {
        setCreatedTime(HBaseColumn.valueOf(value, version));

        return this;
    }

    @Override
    public int hashCode() {
        int h = 17;
        h = 31 * h + Objects.hashCode(id);
        h = 31 * h + Objects.hashCode(accountId);
        h = 31 * h + Objects.hashCode(name);
        h = 31 * h + Objects.hashCode(udid);
        h = 31 * h + Objects.hashCode(platform);
        h = 31 * h + Objects.hashCode(model);
        h = 31 * h + Objects.hashCode(manufacturer);
        h = 31 * h + Objects.hashCode(produceTime);
        h = 31 * h + Objects.hashCode(category);
        h = 31 * h + Objects.hashCode(description);
        h = 31 * h + Objects.hashCode(status);
        h = 31 * h + Objects.hashCode(lastUpdateTime);
        return 31 * h + Objects.hashCode(createdTime);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (obj instanceof AccountDevice other) {
            return Objects.equals(id, other.id) && Objects.equals(accountId, other.accountId) && Objects.equals(name, other.name)
                    && Objects.equals(udid, other.udid) && Objects.equals(platform, other.platform) && Objects.equals(model, other.model)
                    && Objects.equals(manufacturer, other.manufacturer) && Objects.equals(produceTime, other.produceTime)
                    && Objects.equals(category, other.category) && Objects.equals(description, other.description) && Objects.equals(status, other.status)
                    && Objects.equals(lastUpdateTime, other.lastUpdateTime) && Objects.equals(createdTime, other.createdTime);
        }

        return false;
    }

    @Override
    public String toString() {
        return "{id=" + Objects.toString(id) + ", accountId=" + Objects.toString(accountId) + ", name=" + Objects.toString(name) + ", udid="
                + Objects.toString(udid) + ", platform=" + Objects.toString(platform) + ", model=" + Objects.toString(model) + ", manufacturer="
                + Objects.toString(manufacturer) + ", produceTime=" + Objects.toString(produceTime) + ", category=" + Objects.toString(category)
                + ", description=" + Objects.toString(description) + ", status=" + Objects.toString(status) + ", lastUpdateTime="
                + Objects.toString(lastUpdateTime) + ", createdTime=" + Objects.toString(createdTime) + "}";
    }
}
